From 663094cfc2b7f49a15ce7a009ab34c18edabb392 Mon Sep 17 00:00:00 2001
From: Xiaolong Chen <chenxiaolong@loongson.cn>
Date: Tue, 12 Sep 2023 16:22:49 +0800
Subject: [PATCH 68/87] LoongArch: Add tests for ASX vector
 xvfnmadd/xvfrstp/xvfstpi/xvhsubw/ xvmsub/xvrotr/xvrotri/xvld/xvst
 instructions.

gcc/testsuite/ChangeLog:

	* gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_d.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_s.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvfrstp.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvfrstpi.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvhsubw-1.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvhsubw-2.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvld.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvmsub.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvrotr.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvrotri.c: New test.
	* gcc.target/loongarch/vector/lasx/lasx-xvst.c: New test.
---
 .../loongarch/vector/lasx/lasx-xvfnmadd_d.c   | 324 +++++++
 .../loongarch/vector/lasx/lasx-xvfnmadd_s.c   | 895 ++++++++++++++++++
 .../loongarch/vector/lasx/lasx-xvfrstp.c      | 381 ++++++++
 .../loongarch/vector/lasx/lasx-xvfrstpi.c     | 350 +++++++
 .../loongarch/vector/lasx/lasx-xvhsubw-1.c    | 620 ++++++++++++
 .../loongarch/vector/lasx/lasx-xvhsubw-2.c    | 545 +++++++++++
 .../loongarch/vector/lasx/lasx-xvld.c         |  86 ++
 .../loongarch/vector/lasx/lasx-xvmsub.c       | 647 +++++++++++++
 .../loongarch/vector/lasx/lasx-xvrotr.c       | 530 +++++++++++
 .../loongarch/vector/lasx/lasx-xvrotri.c      | 394 ++++++++
 .../loongarch/vector/lasx/lasx-xvst.c         | 102 ++
 11 files changed, 4874 insertions(+)
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_d.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_s.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstp.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstpi.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-1.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-2.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvld.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvmsub.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotr.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotri.c
 create mode 100644 gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvst.c

diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_d.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_d.c
new file mode 100644
index 00000000000..d161c850c2c
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_d.c
@@ -0,0 +1,324 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0001010101010101;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000010100;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0001000001000100;
+  *((unsigned long *)&__m256d_op2[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op2[2]) = 0xffffffffbf7f7fff;
+  *((unsigned long *)&__m256d_op2[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op2[0]) = 0xffffffffe651bfff;
+  *((unsigned long *)&__m256d_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_result[2]) = 0xffffffffbf7f7fff;
+  *((unsigned long *)&__m256d_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_result[0]) = 0xffffffffe651bfff;
+  __m256d_out = __lasx_xvfnmadd_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[3]) = 0x3ff73ff83ff73ff8;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0x3ff73ff83ff73ff8;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[3]) = 0x2020202020202020;
+  *((unsigned long *)&__m256d_op2[2]) = 0x2020202020206431;
+  *((unsigned long *)&__m256d_op2[1]) = 0x2020202020202020;
+  *((unsigned long *)&__m256d_op2[0]) = 0x2020202020206431;
+  *((unsigned long *)&__m256d_result[3]) = 0xa020202020202020;
+  *((unsigned long *)&__m256d_result[2]) = 0xa020202020206431;
+  *((unsigned long *)&__m256d_result[1]) = 0xa020202020202020;
+  *((unsigned long *)&__m256d_result[0]) = 0xa020202020206431;
+  __m256d_out = __lasx_xvfnmadd_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x00000000f0f0f0f0;
+  *((unsigned long *)&__m256d_op0[2]) = 0xf0f0f0f0f0f0f0f0;
+  *((unsigned long *)&__m256d_op0[1]) = 0x00000000f0f0f0f0;
+  *((unsigned long *)&__m256d_op0[0]) = 0xf0f0f0f0f0f0f0f0;
+  *((unsigned long *)&__m256d_op1[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256d_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op1[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256d_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0001b0b1b4b5dd9f;
+  *((unsigned long *)&__m256d_op2[2]) = 0x7f7f7f5c8f374980;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0001b0b1b4b5dd9f;
+  *((unsigned long *)&__m256d_op2[0]) = 0x7f7f7f5c8f374980;
+  *((unsigned long *)&__m256d_result[3]) = 0x8001b0b1b4b5dd9f;
+  *((unsigned long *)&__m256d_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_result[1]) = 0x8001b0b1b4b5dd9f;
+  *((unsigned long *)&__m256d_result[0]) = 0xffffffffffffffff;
+  __m256d_out = __lasx_xvfnmadd_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0xff21ff21ff21ff21;
+  *((unsigned long *)&__m256d_op0[2]) = 0xff21ff21ff21ff21;
+  *((unsigned long *)&__m256d_op0[1]) = 0xff21ff21ff21ff21;
+  *((unsigned long *)&__m256d_op0[0]) = 0xff21ff21ff21ff21;
+  *((unsigned long *)&__m256d_op1[3]) = 0xff21c241ff21c241;
+  *((unsigned long *)&__m256d_op1[2]) = 0xff21c241ff21c241;
+  *((unsigned long *)&__m256d_op1[1]) = 0xff21c241ff21c241;
+  *((unsigned long *)&__m256d_op1[0]) = 0xff21c241ff21c241;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0xfff0000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0xfff0000000000000;
+  *((unsigned long *)&__m256d_result[1]) = 0xfff0000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0xfff0000000000000;
+  __m256d_out = __lasx_xvfnmadd_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000040;
+  *((unsigned long *)&__m256d_op0[2]) = 0x0000000000000007;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000040;
+  *((unsigned long *)&__m256d_op0[0]) = 0x0000000000000007;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x8000000000000000;
+  __m256d_out = __lasx_xvfnmadd_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x1080108010060002;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x1080108010060002;
+  *((unsigned long *)&__m256d_op1[3]) = 0xffffffe4ffffffe4;
+  *((unsigned long *)&__m256d_op1[2]) = 0xffffffe4ffffffe4;
+  *((unsigned long *)&__m256d_op1[1]) = 0xffffffe4ffffffe4;
+  *((unsigned long *)&__m256d_op1[0]) = 0xffffffe4ffffffe4;
+  *((unsigned long *)&__m256d_op2[3]) = 0x7fff00017fff0000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x7fff00017fff0000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x7fff00017fff0000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x7fff00017fff0000;
+  *((unsigned long *)&__m256d_result[3]) = 0x7fff00017fff0000;
+  *((unsigned long *)&__m256d_result[2]) = 0x7fff00017fff0000;
+  *((unsigned long *)&__m256d_result[1]) = 0x7fff00017fff0000;
+  *((unsigned long *)&__m256d_result[0]) = 0x7fff00017fff0000;
+  __m256d_out = __lasx_xvfnmadd_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x1716151417161514;
+  *((unsigned long *)&__m256d_op0[2]) = 0x1716151417161514;
+  *((unsigned long *)&__m256d_op0[1]) = 0x1716151417161514;
+  *((unsigned long *)&__m256d_op0[0]) = 0x1716151417161514;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000000002780;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000000000002780;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000002780;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000002780;
+  *((unsigned long *)&__m256d_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x8000000000002780;
+  *((unsigned long *)&__m256d_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x8000000000002780;
+  __m256d_out = __lasx_xvfnmadd_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0080200000802000;
+  *((unsigned long *)&__m256d_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0080200000802000;
+  *((unsigned long *)&__m256d_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0080200000802000;
+  *((unsigned long *)&__m256d_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0080200000802000;
+  *((unsigned long *)&__m256d_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256d_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0xffffffffffffffff;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x8000000000000000;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256d_op0[2]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256d_op0[1]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256d_op0[0]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0xffffffffffba0c05;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0xffffffffffba0c05;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000483800;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000483800;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x0000000000483800;
+  *((unsigned long *)&__m256d_result[2]) = 0xffffffffffba0c05;
+  *((unsigned long *)&__m256d_result[1]) = 0x0000000000483800;
+  *((unsigned long *)&__m256d_result[0]) = 0xffffffffffba0c05;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x000000007fffffff;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x000000007fffffff;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x8000000000000000;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x0000005000000020;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x0000005000000020;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000005000000020;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000005000000020;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000005000000020;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000005000000020;
+  *((unsigned long *)&__m256d_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x0000005000000020;
+  *((unsigned long *)&__m256d_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x0000005000000020;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0010000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0008000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0010000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0008000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x0010000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x0008000000000000;
+  *((unsigned long *)&__m256d_result[1]) = 0x0010000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x0008000000000000;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0xff0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256d_op0[2]) = 0x0d0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256d_op0[1]) = 0xff0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256d_op0[0]) = 0x0d0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256d_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x8000000000000000;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0xffffffffe0000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0xffffffffe0000000;
+  *((unsigned long *)&__m256d_op0[1]) = 0xffffffffe0000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0xffffffffe0000000;
+  *((unsigned long *)&__m256d_op1[3]) = 0xffff801000000010;
+  *((unsigned long *)&__m256d_op1[2]) = 0xffff800300000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0xffff801000000010;
+  *((unsigned long *)&__m256d_op1[0]) = 0xffff800300000000;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0xffffffffe0000000;
+  *((unsigned long *)&__m256d_result[2]) = 0xffffffffe0000000;
+  *((unsigned long *)&__m256d_result[1]) = 0xffffffffe0000000;
+  *((unsigned long *)&__m256d_result[0]) = 0xffffffffe0000000;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  *((unsigned long *)&__m256d_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[2]) = 0x00000000ffffffce;
+  *((unsigned long *)&__m256d_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op0[0]) = 0x00000000ffffffce;
+  *((unsigned long *)&__m256d_op1[3]) = 0x00000005ffffffff;
+  *((unsigned long *)&__m256d_op1[2]) = 0x0000000700000000;
+  *((unsigned long *)&__m256d_op1[1]) = 0x00000005ffffffff;
+  *((unsigned long *)&__m256d_op1[0]) = 0x0000000700000000;
+  *((unsigned long *)&__m256d_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256d_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[2]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256d_result[0]) = 0x8000000000000000;
+  __m256d_out = __lasx_xvfnmsub_d (__m256d_op0, __m256d_op1, __m256d_op2);
+  ASSERTEQ_64 (__LINE__, __m256d_result, __m256d_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_s.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_s.c
new file mode 100644
index 00000000000..c5e9576ead4
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfnmadd_s.c
@@ -0,0 +1,895 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0xffffffff;
+  *((int *)&__m256_op1[6]) = 0xffff5f5c;
+  *((int *)&__m256_op1[5]) = 0xffffffff;
+  *((int *)&__m256_op1[4]) = 0xffff5f5c;
+  *((int *)&__m256_op1[3]) = 0xffffffff;
+  *((int *)&__m256_op1[2]) = 0xffff5f5c;
+  *((int *)&__m256_op1[1]) = 0xffffffff;
+  *((int *)&__m256_op1[0]) = 0xffff5f5c;
+  *((int *)&__m256_op2[7]) = 0x0000000f;
+  *((int *)&__m256_op2[6]) = 0x0000000f;
+  *((int *)&__m256_op2[5]) = 0xff00ff0f;
+  *((int *)&__m256_op2[4]) = 0xff005f0f;
+  *((int *)&__m256_op2[3]) = 0x0000000f;
+  *((int *)&__m256_op2[2]) = 0x0000000f;
+  *((int *)&__m256_op2[1]) = 0xff00ff0f;
+  *((int *)&__m256_op2[0]) = 0xff005f0f;
+  *((int *)&__m256_result[7]) = 0xffffffff;
+  *((int *)&__m256_result[6]) = 0xffff5f5c;
+  *((int *)&__m256_result[5]) = 0xffffffff;
+  *((int *)&__m256_result[4]) = 0xffff5f5c;
+  *((int *)&__m256_result[3]) = 0xffffffff;
+  *((int *)&__m256_result[2]) = 0xffff5f5c;
+  *((int *)&__m256_result[1]) = 0xffffffff;
+  *((int *)&__m256_result[0]) = 0xffff5f5c;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00010001;
+  *((int *)&__m256_op0[6]) = 0x00010000;
+  *((int *)&__m256_op0[5]) = 0x020afefb;
+  *((int *)&__m256_op0[4]) = 0x08140000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000001;
+  *((int *)&__m256_op0[1]) = 0x0003fffc;
+  *((int *)&__m256_op0[0]) = 0x00060000;
+  *((int *)&__m256_op1[7]) = 0x80000000;
+  *((int *)&__m256_op1[6]) = 0x40000000;
+  *((int *)&__m256_op1[5]) = 0x40000000;
+  *((int *)&__m256_op1[4]) = 0x10000010;
+  *((int *)&__m256_op1[3]) = 0x80000000;
+  *((int *)&__m256_op1[2]) = 0x40000000;
+  *((int *)&__m256_op1[1]) = 0x80000000;
+  *((int *)&__m256_op1[0]) = 0x40000010;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x000000ff;
+  *((int *)&__m256_op2[4]) = 0x0001ffff;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x0000ffff;
+  *((int *)&__m256_op2[0]) = 0x00010000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80020000;
+  *((int *)&__m256_result[5]) = 0x828aff0b;
+  *((int *)&__m256_result[4]) = 0x8001ffff;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000002;
+  *((int *)&__m256_result[1]) = 0x8000ffff;
+  *((int *)&__m256_result[0]) = 0x800d0002;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x1f3d2101;
+  *((int *)&__m256_op0[6]) = 0x1f3d2101;
+  *((int *)&__m256_op0[5]) = 0x1f3d2101;
+  *((int *)&__m256_op0[4]) = 0xd07dbf01;
+  *((int *)&__m256_op0[3]) = 0x9f1fd080;
+  *((int *)&__m256_op0[2]) = 0x1f3d2101;
+  *((int *)&__m256_op0[1]) = 0x1f3d2101;
+  *((int *)&__m256_op0[0]) = 0xd07dbf01;
+  *((int *)&__m256_op1[7]) = 0x1d949d94;
+  *((int *)&__m256_op1[6]) = 0x9d949d95;
+  *((int *)&__m256_op1[5]) = 0x1d949d94;
+  *((int *)&__m256_op1[4]) = 0x9e1423d4;
+  *((int *)&__m256_op1[3]) = 0x1de9a03f;
+  *((int *)&__m256_op1[2]) = 0x3dd41d95;
+  *((int *)&__m256_op1[1]) = 0x1d949d94;
+  *((int *)&__m256_op1[0]) = 0x9e1423d4;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x8001b72e;
+  *((int *)&__m256_result[6]) = 0x0001b72e;
+  *((int *)&__m256_result[5]) = 0x8001b72e;
+  *((int *)&__m256_result[4]) = 0xaf12d5f0;
+  *((int *)&__m256_result[3]) = 0x00024763;
+  *((int *)&__m256_result[2]) = 0x9d9cb530;
+  *((int *)&__m256_result[1]) = 0x8001b72e;
+  *((int *)&__m256_result[0]) = 0xaf12d5f0;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x1f0fdf7f;
+  *((int *)&__m256_op0[6]) = 0x3e3b31d4;
+  *((int *)&__m256_op0[5]) = 0x7ff80000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x1f0fdf7f;
+  *((int *)&__m256_op0[2]) = 0x3e3b31d4;
+  *((int *)&__m256_op0[1]) = 0x7ff80000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0x7ff80000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0x7ff80000;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x80000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x80000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x80000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x80000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x0000ffff;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x0000ffff;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000001;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000001;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000001;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000001;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000001;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000001;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000001;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x80000001;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000200;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000200;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000200;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000200;
+  *((int *)&__m256_op2[7]) = 0xffffffa0;
+  *((int *)&__m256_op2[6]) = 0x00000001;
+  *((int *)&__m256_op2[5]) = 0xffffffe0;
+  *((int *)&__m256_op2[4]) = 0x00000001;
+  *((int *)&__m256_op2[3]) = 0xffffffa0;
+  *((int *)&__m256_op2[2]) = 0x00000001;
+  *((int *)&__m256_op2[1]) = 0xffffffe0;
+  *((int *)&__m256_op2[0]) = 0x00000001;
+  *((int *)&__m256_result[7]) = 0xffffffa0;
+  *((int *)&__m256_result[6]) = 0x80000001;
+  *((int *)&__m256_result[5]) = 0xffffffe0;
+  *((int *)&__m256_result[4]) = 0x80000001;
+  *((int *)&__m256_result[3]) = 0xffffffa0;
+  *((int *)&__m256_result[2]) = 0x80000001;
+  *((int *)&__m256_result[1]) = 0xffffffe0;
+  *((int *)&__m256_result[0]) = 0x80000001;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0xffffffff;
+  *((int *)&__m256_op0[6]) = 0xffffffff;
+  *((int *)&__m256_op0[5]) = 0xffffffff;
+  *((int *)&__m256_op0[4]) = 0xffffffff;
+  *((int *)&__m256_op0[3]) = 0xffffffff;
+  *((int *)&__m256_op0[2]) = 0xffffffff;
+  *((int *)&__m256_op0[1]) = 0xffffffff;
+  *((int *)&__m256_op0[0]) = 0xffffffff;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0xffffffff;
+  *((int *)&__m256_result[6]) = 0xffffffff;
+  *((int *)&__m256_result[5]) = 0xffffffff;
+  *((int *)&__m256_result[4]) = 0xffffffff;
+  *((int *)&__m256_result[3]) = 0xffffffff;
+  *((int *)&__m256_result[2]) = 0xffffffff;
+  *((int *)&__m256_result[1]) = 0xffffffff;
+  *((int *)&__m256_result[0]) = 0xffffffff;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x49810081;
+  *((int *)&__m256_op1[6]) = 0x4843ffe1;
+  *((int *)&__m256_op1[5]) = 0x49810081;
+  *((int *)&__m256_op1[4]) = 0x68410001;
+  *((int *)&__m256_op1[3]) = 0x49810081;
+  *((int *)&__m256_op1[2]) = 0x4843ffe1;
+  *((int *)&__m256_op1[1]) = 0x49810081;
+  *((int *)&__m256_op1[0]) = 0x68410001;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00009fff;
+  *((int *)&__m256_op0[6]) = 0x00002001;
+  *((int *)&__m256_op0[5]) = 0x0000ffff;
+  *((int *)&__m256_op0[4]) = 0x0000ffff;
+  *((int *)&__m256_op0[3]) = 0x00009fff;
+  *((int *)&__m256_op0[2]) = 0x00002001;
+  *((int *)&__m256_op0[1]) = 0x0000ffff;
+  *((int *)&__m256_op0[0]) = 0x0000ffff;
+  *((int *)&__m256_op1[7]) = 0xfffeb683;
+  *((int *)&__m256_op1[6]) = 0x9ffffd80;
+  *((int *)&__m256_op1[5]) = 0xfffe97c0;
+  *((int *)&__m256_op1[4]) = 0x20010001;
+  *((int *)&__m256_op1[3]) = 0xfffeb683;
+  *((int *)&__m256_op1[2]) = 0x9ffffd80;
+  *((int *)&__m256_op1[1]) = 0xfffe97c0;
+  *((int *)&__m256_op1[0]) = 0x20010001;
+  *((int *)&__m256_op2[7]) = 0x00009fff;
+  *((int *)&__m256_op2[6]) = 0x00002001;
+  *((int *)&__m256_op2[5]) = 0x0000ffff;
+  *((int *)&__m256_op2[4]) = 0x0000ffff;
+  *((int *)&__m256_op2[3]) = 0x00009fff;
+  *((int *)&__m256_op2[2]) = 0x00002001;
+  *((int *)&__m256_op2[1]) = 0x0000ffff;
+  *((int *)&__m256_op2[0]) = 0x0000ffff;
+  *((int *)&__m256_result[7]) = 0xfffeb683;
+  *((int *)&__m256_result[6]) = 0x80002001;
+  *((int *)&__m256_result[5]) = 0xfffe97c0;
+  *((int *)&__m256_result[4]) = 0x8000ffff;
+  *((int *)&__m256_result[3]) = 0xfffeb683;
+  *((int *)&__m256_result[2]) = 0x80002001;
+  *((int *)&__m256_result[1]) = 0xfffe97c0;
+  *((int *)&__m256_result[0]) = 0x8000ffff;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x7fffffff;
+  *((int *)&__m256_op0[6]) = 0x80000000;
+  *((int *)&__m256_op0[5]) = 0x7fffffff;
+  *((int *)&__m256_op0[4]) = 0x80000000;
+  *((int *)&__m256_op0[3]) = 0x7fffffff;
+  *((int *)&__m256_op0[2]) = 0x80000000;
+  *((int *)&__m256_op0[1]) = 0x7fffffff;
+  *((int *)&__m256_op0[0]) = 0x80000000;
+  *((int *)&__m256_op1[7]) = 0xfd02fd02;
+  *((int *)&__m256_op1[6]) = 0xfd02fd02;
+  *((int *)&__m256_op1[5]) = 0xfd02fd02;
+  *((int *)&__m256_op1[4]) = 0xfd02fd02;
+  *((int *)&__m256_op1[3]) = 0xfd02fd02;
+  *((int *)&__m256_op1[2]) = 0xfd02fd02;
+  *((int *)&__m256_op1[1]) = 0xfd02fd02;
+  *((int *)&__m256_op1[0]) = 0xfd02fd02;
+  *((int *)&__m256_op2[7]) = 0xfd02fd02;
+  *((int *)&__m256_op2[6]) = 0xfd02fd02;
+  *((int *)&__m256_op2[5]) = 0xfd02fd02;
+  *((int *)&__m256_op2[4]) = 0xfd02fd02;
+  *((int *)&__m256_op2[3]) = 0xfd02fd02;
+  *((int *)&__m256_op2[2]) = 0xfd02fd02;
+  *((int *)&__m256_op2[1]) = 0xfd02fd02;
+  *((int *)&__m256_op2[0]) = 0xfd02fd02;
+  *((int *)&__m256_result[7]) = 0x7fffffff;
+  *((int *)&__m256_result[6]) = 0x7d02fd02;
+  *((int *)&__m256_result[5]) = 0x7fffffff;
+  *((int *)&__m256_result[4]) = 0x7d02fd02;
+  *((int *)&__m256_result[3]) = 0x7fffffff;
+  *((int *)&__m256_result[2]) = 0x7d02fd02;
+  *((int *)&__m256_result[1]) = 0x7fffffff;
+  *((int *)&__m256_result[0]) = 0x7d02fd02;
+  __m256_out = __lasx_xvfnmadd_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0xffffffff;
+  *((int *)&__m256_op0[6]) = 0xffffffff;
+  *((int *)&__m256_op0[5]) = 0xffffffff;
+  *((int *)&__m256_op0[4]) = 0xbf7f7fff;
+  *((int *)&__m256_op0[3]) = 0xffffffff;
+  *((int *)&__m256_op0[2]) = 0xffffffff;
+  *((int *)&__m256_op0[1]) = 0xffffffff;
+  *((int *)&__m256_op0[0]) = 0xe651bfff;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0xffffffff;
+  *((int *)&__m256_op2[2]) = 0xf328dfff;
+  *((int *)&__m256_op2[1]) = 0x6651bfff;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0xffffffff;
+  *((int *)&__m256_result[6]) = 0xffffffff;
+  *((int *)&__m256_result[5]) = 0xffffffff;
+  *((int *)&__m256_result[4]) = 0x00000000;
+  *((int *)&__m256_result[3]) = 0xffffffff;
+  *((int *)&__m256_result[2]) = 0xffffffff;
+  *((int *)&__m256_result[1]) = 0xffffffff;
+  *((int *)&__m256_result[0]) = 0x00000000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x07070707;
+  *((int *)&__m256_op0[5]) = 0x01020400;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00020100;
+  *((int *)&__m256_op0[1]) = 0x07030200;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0xffffff80;
+  *((int *)&__m256_op1[6]) = 0xfefeff00;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x01000400;
+  *((int *)&__m256_op1[3]) = 0xffffff80;
+  *((int *)&__m256_op1[2]) = 0xfeff0000;
+  *((int *)&__m256_op1[1]) = 0x02020080;
+  *((int *)&__m256_op1[0]) = 0x5c800400;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0xffffffff;
+  *((int *)&__m256_op2[2]) = 0xf328dfff;
+  *((int *)&__m256_op2[1]) = 0x6651bfff;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0xffffff80;
+  *((int *)&__m256_result[6]) = 0x46867f79;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0xffffffff;
+  *((int *)&__m256_result[2]) = 0xf328dfff;
+  *((int *)&__m256_result[1]) = 0x6651bfff;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0xffffffff;
+  *((int *)&__m256_op0[6]) = 0xe0000000;
+  *((int *)&__m256_op0[5]) = 0xffffffff;
+  *((int *)&__m256_op0[4]) = 0xe0000000;
+  *((int *)&__m256_op0[3]) = 0xffffffff;
+  *((int *)&__m256_op0[2]) = 0xe0000000;
+  *((int *)&__m256_op0[1]) = 0xffffffff;
+  *((int *)&__m256_op0[0]) = 0xe0000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x80000000;
+  *((int *)&__m256_op1[4]) = 0x80000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x80000000;
+  *((int *)&__m256_op1[0]) = 0x80000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0xffffffff;
+  *((int *)&__m256_result[6]) = 0x00000000;
+  *((int *)&__m256_result[5]) = 0xffffffff;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0xffffffff;
+  *((int *)&__m256_result[2]) = 0x00000000;
+  *((int *)&__m256_result[1]) = 0xffffffff;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x7f800000;
+  *((int *)&__m256_op2[6]) = 0x7f800000;
+  *((int *)&__m256_op2[5]) = 0x7fc00000;
+  *((int *)&__m256_op2[4]) = 0x7fc00000;
+  *((int *)&__m256_op2[3]) = 0x7f800000;
+  *((int *)&__m256_op2[2]) = 0x7f800000;
+  *((int *)&__m256_op2[1]) = 0x7fc00000;
+  *((int *)&__m256_op2[0]) = 0x7fc00000;
+  *((int *)&__m256_result[7]) = 0x7f800000;
+  *((int *)&__m256_result[6]) = 0x7f800000;
+  *((int *)&__m256_result[5]) = 0x7fc00000;
+  *((int *)&__m256_result[4]) = 0x7fc00000;
+  *((int *)&__m256_result[3]) = 0x7f800000;
+  *((int *)&__m256_result[2]) = 0x7f800000;
+  *((int *)&__m256_result[1]) = 0x7fc00000;
+  *((int *)&__m256_result[0]) = 0x7fc00000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x7fefffff;
+  *((int *)&__m256_op1[6]) = 0xffffffff;
+  *((int *)&__m256_op1[5]) = 0x7fefffff;
+  *((int *)&__m256_op1[4]) = 0xffffffff;
+  *((int *)&__m256_op1[3]) = 0x7fefffff;
+  *((int *)&__m256_op1[2]) = 0xffffffff;
+  *((int *)&__m256_op1[1]) = 0x7fefffff;
+  *((int *)&__m256_op1[0]) = 0xffffffff;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x7fefffff;
+  *((int *)&__m256_result[6]) = 0xffffffff;
+  *((int *)&__m256_result[5]) = 0x7fefffff;
+  *((int *)&__m256_result[4]) = 0xffffffff;
+  *((int *)&__m256_result[3]) = 0x7fefffff;
+  *((int *)&__m256_result[2]) = 0xffffffff;
+  *((int *)&__m256_result[1]) = 0x7fefffff;
+  *((int *)&__m256_result[0]) = 0xffffffff;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0xf7f8f7f8;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00003f78;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0xf7f8f7f8;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00003f78;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0xf7f8f7f8;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00003f78;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0xf7f8f7f8;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00003f78;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0xff800000;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x80000000;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0xff800000;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x80000000;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0xffffffff;
+  *((int *)&__m256_op0[4]) = 0xffffffff;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0xffffffff;
+  *((int *)&__m256_op0[0]) = 0xffffffff;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0xffffffff;
+  *((int *)&__m256_op2[4]) = 0xffffffff;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0xffffffff;
+  *((int *)&__m256_op2[0]) = 0xffffffff;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0xffffffff;
+  *((int *)&__m256_result[4]) = 0xffffffff;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0xffffffff;
+  *((int *)&__m256_result[0]) = 0xffffffff;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x01010100;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000405;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x01010100;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000405;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x01010100;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000405;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x01010100;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000405;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x01010100;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0x00000405;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x01010100;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0x00000405;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00800080;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000202;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00800080;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000202;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0xff88ff88;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0xff88ff88;
+  *((int *)&__m256_op2[7]) = 0x00000000;
+  *((int *)&__m256_op2[6]) = 0x00000000;
+  *((int *)&__m256_op2[5]) = 0x00000000;
+  *((int *)&__m256_op2[4]) = 0x00000000;
+  *((int *)&__m256_op2[3]) = 0x00000000;
+  *((int *)&__m256_op2[2]) = 0x00000000;
+  *((int *)&__m256_op2[1]) = 0x00000000;
+  *((int *)&__m256_op2[0]) = 0x00000000;
+  *((int *)&__m256_result[7]) = 0x80000000;
+  *((int *)&__m256_result[6]) = 0x80000000;
+  *((int *)&__m256_result[5]) = 0x80000000;
+  *((int *)&__m256_result[4]) = 0xffc8ff88;
+  *((int *)&__m256_result[3]) = 0x80000000;
+  *((int *)&__m256_result[2]) = 0x80000000;
+  *((int *)&__m256_result[1]) = 0x80000000;
+  *((int *)&__m256_result[0]) = 0xffc8ff88;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x00000000;
+  *((int *)&__m256_op1[4]) = 0x00000000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x00000000;
+  *((int *)&__m256_op1[0]) = 0x00000000;
+  *((int *)&__m256_op2[7]) = 0x001fffff;
+  *((int *)&__m256_op2[6]) = 0xffffffff;
+  *((int *)&__m256_op2[5]) = 0xffffffff;
+  *((int *)&__m256_op2[4]) = 0xffffffff;
+  *((int *)&__m256_op2[3]) = 0x001fffff;
+  *((int *)&__m256_op2[2]) = 0xffffffff;
+  *((int *)&__m256_op2[1]) = 0xffffffff;
+  *((int *)&__m256_op2[0]) = 0xffffffff;
+  *((int *)&__m256_result[7]) = 0x001fffff;
+  *((int *)&__m256_result[6]) = 0xffffffff;
+  *((int *)&__m256_result[5]) = 0xffffffff;
+  *((int *)&__m256_result[4]) = 0xffffffff;
+  *((int *)&__m256_result[3]) = 0x001fffff;
+  *((int *)&__m256_result[2]) = 0xffffffff;
+  *((int *)&__m256_result[1]) = 0xffffffff;
+  *((int *)&__m256_result[0]) = 0xffffffff;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  *((int *)&__m256_op0[7]) = 0x00000000;
+  *((int *)&__m256_op0[6]) = 0x00000000;
+  *((int *)&__m256_op0[5]) = 0x00000000;
+  *((int *)&__m256_op0[4]) = 0x00000000;
+  *((int *)&__m256_op0[3]) = 0x00000000;
+  *((int *)&__m256_op0[2]) = 0x00000000;
+  *((int *)&__m256_op0[1]) = 0x00000000;
+  *((int *)&__m256_op0[0]) = 0x00000000;
+  *((int *)&__m256_op1[7]) = 0x00000000;
+  *((int *)&__m256_op1[6]) = 0x00000000;
+  *((int *)&__m256_op1[5]) = 0x7fff8000;
+  *((int *)&__m256_op1[4]) = 0x7fff0000;
+  *((int *)&__m256_op1[3]) = 0x00000000;
+  *((int *)&__m256_op1[2]) = 0x00000000;
+  *((int *)&__m256_op1[1]) = 0x7fff8000;
+  *((int *)&__m256_op1[0]) = 0x7fff0000;
+  *((int *)&__m256_op2[7]) = 0xffffffff;
+  *((int *)&__m256_op2[6]) = 0xffffffff;
+  *((int *)&__m256_op2[5]) = 0xffffffff;
+  *((int *)&__m256_op2[4]) = 0xffffff10;
+  *((int *)&__m256_op2[3]) = 0xffffffff;
+  *((int *)&__m256_op2[2]) = 0xffffffff;
+  *((int *)&__m256_op2[1]) = 0xffffffff;
+  *((int *)&__m256_op2[0]) = 0xffffff10;
+  *((int *)&__m256_result[7]) = 0xffffffff;
+  *((int *)&__m256_result[6]) = 0xffffffff;
+  *((int *)&__m256_result[5]) = 0xffffffff;
+  *((int *)&__m256_result[4]) = 0xffffff10;
+  *((int *)&__m256_result[3]) = 0xffffffff;
+  *((int *)&__m256_result[2]) = 0xffffffff;
+  *((int *)&__m256_result[1]) = 0xffffffff;
+  *((int *)&__m256_result[0]) = 0xffffff10;
+  __m256_out = __lasx_xvfnmsub_s (__m256_op0, __m256_op1, __m256_op2);
+  ASSERTEQ_32 (__LINE__, __m256_result, __m256_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstp.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstp.c
new file mode 100644
index 00000000000..557f9f8b50e
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstp.c
@@ -0,0 +1,381 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00ff00ff00000007;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000000000e7;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00ff00ff00000007;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000007;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000080000;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x2020202020202020;
+  *((unsigned long *)&__m256i_op0[2]) = 0x2020202020202020;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00007f7f00000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00007f7f00007fff;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000007f00340040;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000007f000000ff;
+  *((unsigned long *)&__m256i_result[3]) = 0x2020202020202020;
+  *((unsigned long *)&__m256i_result[2]) = 0x2020202020200008;
+  *((unsigned long *)&__m256i_result[1]) = 0x0008010101010101;
+  *((unsigned long *)&__m256i_result[0]) = 0x0101010101010101;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000ffff00000008;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ffff00000008;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x03f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_op1[2]) = 0x03f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_op1[1]) = 0x03f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_op1[0]) = 0x03f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_op2[3]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_op2[2]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_op2[1]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_op2[0]) = 0xf7f7f7f7f7f7f7f7;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000010;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000010;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op0[2]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op0[1]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op0[0]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffff10;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffff10;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000008;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0xbfbfbfbfbfbfbfbf;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0xbfbfbfbfbfbfbfbf;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0xbfbfbfbfbfbfbfbf;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0xbfbfbfbfbfbfbfbf;
+  *((unsigned long *)&__m256i_result[3]) = 0x0008000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xbfbfbfbfbfbfbfbf;
+  *((unsigned long *)&__m256i_result[1]) = 0x0008000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xbfbfbfbfbfbfbfbf;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000008;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000010;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000010;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xfefefefefefefefe;
+  *((unsigned long *)&__m256i_op1[2]) = 0xfefefefefefefefe;
+  *((unsigned long *)&__m256i_op1[1]) = 0xfefefefefefefefe;
+  *((unsigned long *)&__m256i_op1[0]) = 0xfefefefefefefefe;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_op2[1]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000080;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000010;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffe1;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffe1;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffe1;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffe1;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffe1;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffff10;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffe1;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffff10;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x007f007bfffffffb;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x007f007bfffffffb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000010000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000010000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00000000ffdbbbcf;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000ffb8579f;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00000000ffdbbbcf;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000ffb8579f;
+  *((unsigned long *)&__m256i_op2[3]) = 0xfffcfffcfffcfffc;
+  *((unsigned long *)&__m256i_op2[2]) = 0xfffcfffcfffcfffc;
+  *((unsigned long *)&__m256i_op2[1]) = 0xfffcfffcfffcfffc;
+  *((unsigned long *)&__m256i_op2[0]) = 0xfffcfffcfffcfffc;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000008;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000c040c0;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000c040c0;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x00000004843ffdff;
+  *((unsigned long *)&__m256i_op2[2]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x00000004843ffdff;
+  *((unsigned long *)&__m256i_op2[0]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffe000ffffffff08;
+  *((unsigned long *)&__m256i_result[1]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffe000ffffffff08;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffff0000;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffff0000;
+  __m256i_out = __lasx_xvfrstp_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0004000400040004;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0004000500040005;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0004000400040004;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0004000500040005;
+  *((unsigned long *)&__m256i_op2[3]) = 0x00007fff00007fff;
+  *((unsigned long *)&__m256i_op2[2]) = 0x00007fff00000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x00007fff00007fff;
+  *((unsigned long *)&__m256i_op2[0]) = 0x00007fff00000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffff10;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffff10;
+  __m256i_out = __lasx_xvfrstp_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstpi.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstpi.c
new file mode 100644
index 00000000000..cdb7b11aa1a
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvfrstpi.c
@@ -0,0 +1,350 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x38a966b31be83ee9;
+  *((unsigned long *)&__m256i_op0[2]) = 0x5f6108dc25b8e028;
+  *((unsigned long *)&__m256i_op0[1]) = 0xf41a56e8a20878d7;
+  *((unsigned long *)&__m256i_op0[0]) = 0x683b8b67e20c8ee5;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffcd42ffffecc0;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000475ffff4c51;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000740dffffad17;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00003f4bffff7130;
+  *((unsigned long *)&__m256i_result[3]) = 0x38a966b31be83ee9;
+  *((unsigned long *)&__m256i_result[2]) = 0x5f6108dc25b80001;
+  *((unsigned long *)&__m256i_result[1]) = 0xf41a56e8a20878d7;
+  *((unsigned long *)&__m256i_result[0]) = 0x683b8b67e20c0001;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x10);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x1000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x1000000000000000;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x17);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000000004fb;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffff0008;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffff0008;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x14);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffff0008ffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffff0008ffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x6);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffc0ffc0ffc0ffc0;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffc0ffc0ffc0ffc0;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffc0ffc0ffc0ffc0;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffc0ffc0ffc0ffc0;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00ffffff1e9e9e9e;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffff9e9eb09e;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00ffffff1e9e9e9e;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffff9e9eb09e;
+  *((unsigned long *)&__m256i_result[3]) = 0xffc0ffc0ffc0ffc0;
+  *((unsigned long *)&__m256i_result[2]) = 0xffc00000ffc0ffc0;
+  *((unsigned long *)&__m256i_result[1]) = 0xffc0ffc0ffc0ffc0;
+  *((unsigned long *)&__m256i_result[0]) = 0xffc00000ffc0ffc0;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0xa);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op1[2]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op1[1]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op1[0]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x19);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0xf);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000226200005111;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000165e0000480d;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000226200005111;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000165e0000480d;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffd8ffc7ffdaff8a;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffd8ffc7ffdaff8a;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000226200005111;
+  *((unsigned long *)&__m256i_result[2]) = 0x000016000000480d;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000226200005111;
+  *((unsigned long *)&__m256i_result[0]) = 0x000016000000480d;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x14);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xe800c0d8fffeeece;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffff383efffedf0c;
+  *((unsigned long *)&__m256i_op0[1]) = 0xe800c0d8fffeeece;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffff383efffedf0c;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xe800c000fffeeece;
+  *((unsigned long *)&__m256i_result[2]) = 0xffff383efffedf0c;
+  *((unsigned long *)&__m256i_result[1]) = 0xe800c000fffeeece;
+  *((unsigned long *)&__m256i_result[0]) = 0xffff383efffedf0c;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0xc);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000008;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x8);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xff00000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffff000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0xff00000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffff000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x80000000ff800000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x80000000ff800000;
+  *((unsigned long *)&__m256i_result[3]) = 0xff00000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xffff000200000000;
+  *((unsigned long *)&__m256i_result[1]) = 0xff00000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xffff000200000000;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x4);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffff00ffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffff00ffffffff;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x14);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x7c007c0080008000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x7c007c0080008000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x7c00000880008000;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x7c00000880008000;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x1a);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x457db03e457db03e;
+  *((unsigned long *)&__m256i_op0[2]) = 0x457db03e45a87310;
+  *((unsigned long *)&__m256i_op0[1]) = 0x457db03e457db03e;
+  *((unsigned long *)&__m256i_op0[0]) = 0x457db03e45a87310;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x000f000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x000f000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0008b03e457db03e;
+  *((unsigned long *)&__m256i_result[2]) = 0x457db03e45a87310;
+  *((unsigned long *)&__m256i_result[1]) = 0x0008b03e457db03e;
+  *((unsigned long *)&__m256i_result[0]) = 0x457db03e45a87310;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x1f);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x000000000000000b;
+  *((unsigned long *)&__m256i_op0[2]) = 0x000000000000000b;
+  *((unsigned long *)&__m256i_op0[1]) = 0x000000000000000b;
+  *((unsigned long *)&__m256i_op0[0]) = 0x000000000000000b;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000002000000020;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000002000000020;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000002000000020;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000002000000020;
+  *((unsigned long *)&__m256i_result[3]) = 0x000000000008000b;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000000b;
+  *((unsigned long *)&__m256i_result[1]) = 0x000000000008000b;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000000b;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x1d);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000dfffffff1;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000cfffffff3;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000dfffffff1;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000cfffffff3;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x16);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffff00;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffff00;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x8);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000001000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000001000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000010001;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x9);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0008000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0008000000000000;
+  __m256i_out = __lasx_xvfrstpi_h (__m256i_op0, __m256i_op1, 0x13);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xfffffffe00000001;
+  *((unsigned long *)&__m256i_op0[2]) = 0xfffffffe00000001;
+  *((unsigned long *)&__m256i_op0[1]) = 0xfffffffe00000001;
+  *((unsigned long *)&__m256i_op0[0]) = 0xfffffffe00000001;
+  *((unsigned long *)&__m256i_op1[3]) = 0x000000007fff0000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000008000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x000000007fff0000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000008000;
+  *((unsigned long *)&__m256i_result[3]) = 0xff01fffe00000001;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffffe00000001;
+  *((unsigned long *)&__m256i_result[1]) = 0xff01fffe00000001;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffe00000001;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0xe);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x6);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_result[2]) = 0x10ffffff10000006;
+  *((unsigned long *)&__m256i_result[1]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_result[0]) = 0x10ffffff10000006;
+  __m256i_out = __lasx_xvfrstpi_b (__m256i_op0, __m256i_op1, 0x17);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-1.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-1.c
new file mode 100644
index 00000000000..fa4d5fd6fc2
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-1.c
@@ -0,0 +1,620 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7fff7fff7fff7fff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7fff7fff7fff7fff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0001000100010001;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0001000100010001;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000fffefe;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000fffefe;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000010000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000483800;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000483800;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000ffb80000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000ffb80000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000080008001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000080008001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000ffff;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000012;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000012;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000012;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000012;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000ffff;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x000000ff000000ff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x000000000f0f0003;
+  *((unsigned long *)&__m256i_op0[1]) = 0x000000ff000000ff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00000000000f1003;
+  *((unsigned long *)&__m256i_op1[3]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000000f0001;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000011;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000ffff00000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000ffff00000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000ffff00000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ffff00000000;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffe000ffffffff08;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffe000ffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffe000ffffffff08;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0fffffff10000006;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000001fffffff9;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000001fffffff9;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000001fffffff9;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000001fffffff9;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000100000001;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000100000040;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000100000001;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000100002000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000ffff0000ffc0;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ffff00000000;
+  __m256i_out = __lasx_xvhsubw_h_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7f00000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7fff000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7fff000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00b7003600120000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00b7006200fc0000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000fe00ff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00b7004100190004;
+  *((unsigned long *)&__m256i_op1[3]) = 0xdb801b6d0962003f;
+  *((unsigned long *)&__m256i_op1[2]) = 0xdb8a3109fe0f0024;
+  *((unsigned long *)&__m256i_op1[1]) = 0x9a7f997fff01ffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xbe632a4f1c3c5653;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffe54affffffd3;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffcfae000000d8;
+  *((unsigned long *)&__m256i_result[1]) = 0x00006681000000ff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffd668ffffa9c6;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xbff00000bff00000;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xbff00000bff00000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffbff1ffffbff1;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffbff1ffffbff1;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000f0000000f000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000f0000000f000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffff1fffffff1;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffff1fffffff1;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffff1fffffff1;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffff1fffffff1;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000ffff00000001;
+  *((unsigned long *)&__m256i_op0[2]) = 0x1010100f10100fd4;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000ffff00000001;
+  *((unsigned long *)&__m256i_op0[0]) = 0x1010100f10100fd4;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00000000ffeeffaf;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000011;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00000000ffeeffaf;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000011;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000051;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000101000000fff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000051;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000101000000fff;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000000000fe;
+  *((unsigned long *)&__m256i_op0[2]) = 0x817f11ed81800ff0;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000000000fe;
+  *((unsigned long *)&__m256i_op0[0]) = 0x817f11ed81800ff0;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000100000001;
+  *((unsigned long *)&__m256i_result[2]) = 0xffff8180ffff8181;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000100000001;
+  *((unsigned long *)&__m256i_result[0]) = 0xffff8180ffff8181;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000040;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000007;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000040;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000007;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00feff0100feff01;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00feff0100feff01;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000ff000000ff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000ff000000ff;
+  __m256i_out = __lasx_xvhsubw_w_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00ffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00ffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000001;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x7c007c007c007c00;
+  *((unsigned long *)&__m256i_op0[2]) = 0x7c007c007c007c00;
+  *((unsigned long *)&__m256i_op0[1]) = 0x7c007c007c007c00;
+  *((unsigned long *)&__m256i_op0[0]) = 0x7c007c007c007c00;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000001010000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x000000007efeff00;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000001010000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x000000007efeff00;
+  *((unsigned long *)&__m256i_result[3]) = 0x000000007aff7c00;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffffffd017d00;
+  *((unsigned long *)&__m256i_result[1]) = 0x000000007aff7c00;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffffd017d00;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xfffffffe00000002;
+  *((unsigned long *)&__m256i_op1[2]) = 0xfffffffe00000002;
+  *((unsigned long *)&__m256i_op1[1]) = 0xfffffffe00000002;
+  *((unsigned long *)&__m256i_op1[0]) = 0xfffffffe00000002;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffffffffffe;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op0[2]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op0[1]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op0[0]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op1[3]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op1[2]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op1[1]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op1[0]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000020000000200;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000020000000200;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000020000000200;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000020000000200;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffffffffffe00;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffffffffffe00;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffffffffffe00;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffffffffe00;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7ff0000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7ff0000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x7ff0000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7ff0000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_d_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000ffffffff;
+  __m256i_out = __lasx_xvhsubw_q_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_q_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000001;
+  __m256i_out = __lasx_xvhsubw_q_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00003f3f00004040;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00003f3f00004040;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00003f3f00004040;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00003f3f00004040;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffc0c0ffffbfc0;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffc0c0ffffbfc0;
+  __m256i_out = __lasx_xvhsubw_q_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000010000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000010000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7fffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0001000100000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x7fffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0001000100000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffeffff10000000;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffeffff10000000;
+  __m256i_out = __lasx_xvhsubw_q_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000fff8579f;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00000000fff8579f;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000fff8579f;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000fff8579f;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffff0007a861;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffff0007a861;
+  __m256i_out = __lasx_xvhsubw_q_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_q_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-2.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-2.c
new file mode 100644
index 00000000000..87c3e25b137
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvhsubw-2.c
@@ -0,0 +1,545 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffff90ffffff80;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffff90ffffff80;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xff01ff70ff01ff80;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xff01ff70ff01ff80;
+  __m256i_out = __lasx_xvhsubw_hu_bu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xc2c2c2c2c2c2c2c2;
+  *((unsigned long *)&__m256i_op0[2]) = 0xc2c2c2c2c2c2c2c2;
+  *((unsigned long *)&__m256i_op0[1]) = 0xc2c2c2c2c2c2c2c2;
+  *((unsigned long *)&__m256i_op0[0]) = 0xc2c2c2c2c2c2c2c2;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000007;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000007;
+  *((unsigned long *)&__m256i_result[3]) = 0x00c200c200c200c2;
+  *((unsigned long *)&__m256i_result[2]) = 0x00c200c200c200bb;
+  *((unsigned long *)&__m256i_result[1]) = 0x00c200c200c200c2;
+  *((unsigned long *)&__m256i_result[0]) = 0x00c200c200c200bb;
+  __m256i_out = __lasx_xvhsubw_hu_bu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000a00000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x000000010000000a;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000a00000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x000000010000000a;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000800000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000080008001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000800000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000080008001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000ffff;
+  __m256i_out = __lasx_xvhsubw_hu_bu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000100000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000ffff00000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000ffff00000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_hu_bu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000f90;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000f90;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000ff70;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000ff70;
+  __m256i_out = __lasx_xvhsubw_hu_bu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_result[2]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_hu_bu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000f9f9f9f9;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000faf3f3f2;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000f9f9f9f9;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00000000faf3f3f2;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000ff00bb;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000ff0057;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000ff00bb;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000ff0057;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000fffa003e;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000fffb009c;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000fffa003e;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000fffb009c;
+  __m256i_out = __lasx_xvhsubw_hu_bu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ffff0000ffff;
+  __m256i_out = __lasx_xvhsubw_wu_hu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x6300000000000001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x6300000000000001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000ffffffff;
+  __m256i_out = __lasx_xvhsubw_wu_hu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_wu_hu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000003fff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000003fff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000003fff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000003fff;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000ffffc001;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000ffff0000c000;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000ffffc001;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ffff0000c000;
+  __m256i_out = __lasx_xvhsubw_wu_hu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_wu_hu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x9ffffd8020010001;
+  *((unsigned long *)&__m256i_op0[2]) = 0xfffffff9fffffff9;
+  *((unsigned long *)&__m256i_op0[1]) = 0x9ffffd8020010001;
+  *((unsigned long *)&__m256i_op0[0]) = 0xfffffff9fffffff9;
+  *((unsigned long *)&__m256i_op1[3]) = 0x40f69fe73c26f4ee;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7ff8000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x40f69fe73c26f4ee;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7ff8000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000018ffff2b13;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000018ffff2b13;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ffff0000ffff;
+  __m256i_out = __lasx_xvhsubw_wu_hu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00800080ffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00800080ffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x000000000000ffe0;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000001e18;
+  *((unsigned long *)&__m256i_op1[1]) = 0x000000000000ffe0;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000001e18;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000ffff001f;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000007fe268;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000ffff001f;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000007fe268;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000ffff8c80;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00000000fffffe40;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0004000400040004;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffffffbfffc;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffff00fffffff0;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000ffffff00;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000055;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000055;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xfffffffffefefeff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffff295329;
+  *((unsigned long *)&__m256i_op1[1]) = 0xfffffffffefefeff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffff295329;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffff01010101;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffff00d6acd7;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffff01010101;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffff00d6acd7;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x120e120dedf1edf2;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x120e120dedf1edf2;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000120e120d;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000120e120d;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000483800;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000483800;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffff00000001;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000ffffffff;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000200;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000100;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000200;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000100;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000dfffffff1;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000cfffffff3;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000dfffffff1;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000cfffffff3;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffff0000000f;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffff0000000d;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffff0000000f;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffff0000000d;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_du_wu (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0002ff80ffb70000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffb7ff80ffd0ffd8;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00010000002fff9e;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffb5ff80ffd0ffd8;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x0048007f002f0028;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x004a007f002f0028;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xdbcbdbcbecececec;
+  *((unsigned long *)&__m256i_op1[2]) = 0xdbcbdbcb0000dbcb;
+  *((unsigned long *)&__m256i_op1[1]) = 0xdbcbdbcbecececec;
+  *((unsigned long *)&__m256i_op1[0]) = 0xdbcbdbcb0000dbcb;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x24342434ffff2435;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x24342434ffff2435;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffba8300004fc2;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffba8300004fc2;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffba8300004fc2;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffba8300004fc2;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffba8300004fc2;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffba8300004fc2;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffff8000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x7efefefe80ffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x7efefefe80ffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffff8000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffff8001;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000001;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xfffefffefffefffe;
+  *((unsigned long *)&__m256i_op0[2]) = 0xfffefffefffefffe;
+  *((unsigned long *)&__m256i_op0[1]) = 0xfffefffefffefffe;
+  *((unsigned long *)&__m256i_op0[0]) = 0xfffefffefffefffe;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00003fff00003fff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00003fff00003fff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00003fff00003fff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00003fff00003fff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffebffffffebfff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffebffffffebfff;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffff7eddffff7ed3;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffff7edfffff7edf;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffff7eddffff7ed3;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffff7edfffff7edf;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00003fef00003fea;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00003ff000003ff0;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00003fef00003fea;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00003ff000003ff0;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xffff3eedffff3ee3;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xffff3eedffff3ee3;
+  __m256i_out = __lasx_xvhsubw_qu_du (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvld.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvld.c
new file mode 100644
index 00000000000..c1eda6c6c4a
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvld.c
@@ -0,0 +1,86 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_result[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_result[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_result[0]) = 0x0ad152a5ad72feeb;
+  __m256i_out = __lasx_xvld ((unsigned long *)&__m256i_op0, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_result[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_result[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_result[0]) = 0x0ad152a5ad72feeb;
+  __m256i_out = __lasx_xvldx ((unsigned long *)&__m256i_op0, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0xebebebebebebebeb;
+  *((unsigned long *)&__m256i_result[2]) = 0xebebebebebebebeb;
+  *((unsigned long *)&__m256i_result[1]) = 0xebebebebebebebeb;
+  *((unsigned long *)&__m256i_result[0]) = 0xebebebebebebebeb;
+  __m256i_out = __lasx_xvldrepl_b ((unsigned long *)&__m256i_op0, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0xfeebfeebfeebfeeb;
+  *((unsigned long *)&__m256i_result[2]) = 0xfeebfeebfeebfeeb;
+  *((unsigned long *)&__m256i_result[1]) = 0xfeebfeebfeebfeeb;
+  *((unsigned long *)&__m256i_result[0]) = 0xfeebfeebfeebfeeb;
+  __m256i_out = __lasx_xvldrepl_h ((unsigned long *)&__m256i_op0, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0xad72feebad72feeb;
+  *((unsigned long *)&__m256i_result[2]) = 0xad72feebad72feeb;
+  *((unsigned long *)&__m256i_result[1]) = 0xad72feebad72feeb;
+  *((unsigned long *)&__m256i_result[0]) = 0xad72feebad72feeb;
+  __m256i_out = __lasx_xvldrepl_w ((unsigned long *)&__m256i_op0, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[2]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[1]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[0]) = 0x0ad152a5ad72feeb;
+  __m256i_out = __lasx_xvldrepl_d ((unsigned long *)&__m256i_op0, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvmsub.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvmsub.c
new file mode 100644
index 00000000000..8c8d4996b4e
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvmsub.c
@@ -0,0 +1,647 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffff00000000ffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x074132a240000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffff00000000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000ffff0008;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000ffff0001;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x00007ffe81fdfe03;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0001000100010001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0001000100010001;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_d (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op0[2]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op0[1]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op0[0]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op1[3]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op1[2]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op1[1]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op1[0]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_result[2]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_result[1]) = 0x555555ab555555ab;
+  *((unsigned long *)&__m256i_result[0]) = 0x555555ab555555ab;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffff00000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffff00000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffff00000000;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000017f0000017d;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000017f0000017f;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000002e0000002e;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000002e0000ffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000002e0000002e;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000002e0000fffe;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000002e0000002e;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000002e0000ffff;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000002e0000002e;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000002e0000fffe;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000f7bc0001f7bd;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000f93b0000017c;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000f7bc0001f7bd;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000f93b0000017b;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x1010101010101010;
+  *((unsigned long *)&__m256i_op0[2]) = 0x1010101010101010;
+  *((unsigned long *)&__m256i_op0[1]) = 0x1010101010101010;
+  *((unsigned long *)&__m256i_op0[0]) = 0x1010101010101010;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0400040004000400;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0400040004000400;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0400040004000400;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0400040004000400;
+  *((unsigned long *)&__m256i_op2[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x1410141014101410;
+  *((unsigned long *)&__m256i_result[2]) = 0x1410141014101410;
+  *((unsigned long *)&__m256i_result[1]) = 0x1410141014101410;
+  *((unsigned long *)&__m256i_result[0]) = 0x1410141014101410;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xdb801b6d0962003f;
+  *((unsigned long *)&__m256i_op0[2]) = 0xdb8a3109fe0f0024;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000007fff01ffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xdb8e209d0cce025a;
+  *((unsigned long *)&__m256i_op1[3]) = 0xb70036db12c4007e;
+  *((unsigned long *)&__m256i_op1[2]) = 0xb7146213fc1e0049;
+  *((unsigned long *)&__m256i_op1[1]) = 0x000000fefe02fffe;
+  *((unsigned long *)&__m256i_op1[0]) = 0xb71c413b199d04b5;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0xffffcc8000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x000000007dfdff4b;
+  *((unsigned long *)&__m256i_result[3]) = 0xdb801b6d0962003f;
+  *((unsigned long *)&__m256i_result[2]) = 0xdb8a3109fe0f0024;
+  *((unsigned long *)&__m256i_result[1]) = 0x9a7f997fff01ffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xbe632a4f1c3c5653;
+  __m256i_out = __lasx_xvmsub_d (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffff00000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffff00000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffff00000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x00000000fffffffe;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op2[1]) = 0x00000000fffffffe;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_result[2]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_result[1]) = 0x01010101010000ff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0101010101010101;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000004800000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000004500f300fb;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000004800000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000004500f300fb;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000004800000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000004500f300fb;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000004800000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000004500f300fb;
+  *((unsigned long *)&__m256i_result[3]) = 0x7b7b7b7b80000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xcacacb1011040500;
+  *((unsigned long *)&__m256i_result[1]) = 0x7b7b7b7b80000000;
+  *((unsigned long *)&__m256i_result[0]) = 0xcacacb1011040500;
+  __m256i_out = __lasx_xvmsub_d (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_op1[2]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_op1[1]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_op1[0]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_op2[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffefffffffe;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xfff3fff3fff3fff3;
+  *((unsigned long *)&__m256i_op1[2]) = 0xfff3fff3fff3fff3;
+  *((unsigned long *)&__m256i_op1[1]) = 0xfff3fff3fff3fff3;
+  *((unsigned long *)&__m256i_op1[0]) = 0xfff3fff3fff3fff3;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000200;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000200;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000001a00;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000001a00;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xff800000ff800000;
+  *((unsigned long *)&__m256i_op0[2]) = 0xff800000ff800000;
+  *((unsigned long *)&__m256i_op0[1]) = 0xff800000ff800000;
+  *((unsigned long *)&__m256i_op0[0]) = 0xff80000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffecffffffec;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffecffffffec;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffecffffffec;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffecffffffec;
+  *((unsigned long *)&__m256i_op2[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xfe7fffecfe7fffec;
+  *((unsigned long *)&__m256i_result[2]) = 0xff800000ff800000;
+  *((unsigned long *)&__m256i_result[1]) = 0xfe7fffecfe7fffec;
+  *((unsigned long *)&__m256i_result[0]) = 0xff80000000000000;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xa020202020202020;
+  *((unsigned long *)&__m256i_op0[2]) = 0xa020202020206431;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa020202020202020;
+  *((unsigned long *)&__m256i_op0[0]) = 0xa020202020206431;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xa020202020202020;
+  *((unsigned long *)&__m256i_result[2]) = 0xa020202020206431;
+  *((unsigned long *)&__m256i_result[1]) = 0xa020202020202020;
+  *((unsigned long *)&__m256i_result[0]) = 0xa020202020206431;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000000000ff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000000000ff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000ff00000000ff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op2[3]) = 0x000000007fff7fff;
+  *((unsigned long *)&__m256i_op2[2]) = 0x000000007fff7fff;
+  *((unsigned long *)&__m256i_op2[1]) = 0x000000007fff7fff;
+  *((unsigned long *)&__m256i_op2[0]) = 0x000000007fff7fff;
+  *((unsigned long *)&__m256i_result[3]) = 0x000000007fff80fe;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000007fff80fe;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000ffff80007ffe;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ff007fff80fe;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x9ff87ef07f7f817f;
+  *((unsigned long *)&__m256i_op0[2]) = 0x7f807f007f7f817f;
+  *((unsigned long *)&__m256i_op0[1]) = 0x9ff87ef07f7f817f;
+  *((unsigned long *)&__m256i_op0[0]) = 0x7f807f007f7f817f;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x9ff87ef07f7f817f;
+  *((unsigned long *)&__m256i_result[2]) = 0x7f807f007f7f817f;
+  *((unsigned long *)&__m256i_result[1]) = 0x9ff87ef07f7f817f;
+  *((unsigned long *)&__m256i_result[0]) = 0x7f807f007f7f817f;
+  __m256i_out = __lasx_xvmsub_d (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000080008001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000080008001;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x1f001f00000007ef;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x00001fff200007ef;
+  *((unsigned long *)&__m256i_result[3]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000ffff;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000064;
+  *((unsigned long *)&__m256i_result[3]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x4000000000000000;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffff457db03f;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffff457db03f;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_op2[2]) = 0xffffffff457db03f;
+  *((unsigned long *)&__m256i_op2[1]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_op2[0]) = 0xffffffff457db03f;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffff457db03f;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffff457db03f;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffff800000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffff800000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffff800000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffff800000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_d (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000fe200000fe1f;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000fe200000fe1f;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x001ffffe00200000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x001ffffe00200000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000fe200000fe1f;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000fe200000fe1f;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_h (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_d (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7fe363637fe36363;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7fe363637fe36363;
+  *((unsigned long *)&__m256i_op1[1]) = 0x7fe363637fe36363;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7fe363637fe36363;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000009e;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000009e;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0xffff0078ffff0078;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0xffff0078ffff0078;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xfffffffffffffff8;
+  *((unsigned long *)&__m256i_op0[2]) = 0xfffffffffffffff8;
+  *((unsigned long *)&__m256i_op0[1]) = 0xfffffffffffffff8;
+  *((unsigned long *)&__m256i_op0[0]) = 0xfffffffffffffff8;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000038ea4d4a;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7fff00007fff0000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000038ea4d4a;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7fff00007fff0000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffffffffffff8;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffffffffffff8;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffffffffffff8;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffffffffff8;
+  __m256i_out = __lasx_xvmsub_b (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000000d6d6d;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000000d6d6d;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000000d6d6d;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00000000000d6d6d;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op2[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000000d6d6d;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000000d6d6d;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000000d6d6d;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000000d6d6d;
+  __m256i_out = __lasx_xvmsub_w (__m256i_op0, __m256i_op1, __m256i_op2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotr.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotr.c
new file mode 100644
index 00000000000..21446e55eb2
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotr.c
@@ -0,0 +1,530 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x7fff7fff7fff7fff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x7fff7fff7fff7fff;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffff0001ff02;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffff020afefc;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x000000000003fefd;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffefffefff7fff7;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x7fff7ffffffbfffb;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffff0001ff02;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffff020afefc;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x000000000003fefd;
+  *((unsigned long *)&__m256i_op1[3]) = 0x000000000000ffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0209fefb08140000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0003fffc00060000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffff0001ff04;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffff02a0fefc;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000000cfefd;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00ff00ff00000007;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000000000e7;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00ff00ff00000007;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000007;
+  *((unsigned long *)&__m256i_op1[3]) = 0xff01ff010000fff9;
+  *((unsigned long *)&__m256i_op1[2]) = 0x000000000000ff19;
+  *((unsigned long *)&__m256i_op1[1]) = 0xff02ff020001fffa;
+  *((unsigned long *)&__m256i_op1[0]) = 0x000100010001fffa;
+  *((unsigned long *)&__m256i_result[3]) = 0x807f807f00000380;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000007380;
+  *((unsigned long *)&__m256i_result[1]) = 0xc03fc03f000001c0;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000000001c0;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000ffff8c80;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00000000fffffe40;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000ffff8c80;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000ffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000fffffe40;
+  __m256i_out = __lasx_xvrotr_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x7f7f7f7f7f7f7f7f;
+  *((unsigned long *)&__m256i_op0[1]) = 0x7f7f7f7f7f7f7f7f;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x7f7f7f7f7f7f7f7f;
+  *((unsigned long *)&__m256i_result[1]) = 0x7f7f7f7f7f7f7f7f;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op1[2]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op1[1]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_op1[0]) = 0xff01ff01ff01ff01;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvrotr_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000007fee;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7fefffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x000000000000fedd;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000000000fedd;
+  *((unsigned long *)&__m256i_result[1]) = 0x000000000000fedd;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000000000fedd;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000ffff0000ffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000ffff0000ffff;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op0[2]) = 0x805f0000ffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op0[0]) = 0x805f0000ffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op1[2]) = 0x805f0000ffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op1[0]) = 0x805f0000ffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000080;
+  *((unsigned long *)&__m256i_result[2]) = 0x80be0000ffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000080;
+  *((unsigned long *)&__m256i_result[0]) = 0x80be0000ffffffff;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000000000f0;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffff457db03f;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000457db03e;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffff457db03f;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000457d607d;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffff457d607f;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000457d607d;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffff457d607f;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x7fffffff7fffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0x07ffffff07ffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x7fffffff7fffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x07ffffff07ffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7fffffff7fffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x07ffffff07ffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0x7fffffff7fffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x07ffffff07ffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_result[2]) = 0x0ffffffe0ffffffe;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffffefffffffe;
+  *((unsigned long *)&__m256i_result[0]) = 0x0ffffffe0ffffffe;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffe0047d00e00480;
+  *((unsigned long *)&__m256i_op0[2]) = 0x001fc0200060047a;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffe0047d00e00480;
+  *((unsigned long *)&__m256i_op0[0]) = 0x001fc0200060047a;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xffe0047d00e00480;
+  *((unsigned long *)&__m256i_result[2]) = 0x001fc0200060047a;
+  *((unsigned long *)&__m256i_result[1]) = 0xffe0047d00e00480;
+  *((unsigned long *)&__m256i_result[0]) = 0x001fc0200060047a;
+  __m256i_out = __lasx_xvrotr_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x386000003df80000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x386000003df80000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00ca0000fff80000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00ca0000fff80000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x381800007af80000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x381800007af80000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000ffff0001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000ffff0001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x000086fe0000403e;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000403e00004040;
+  *((unsigned long *)&__m256i_op0[1]) = 0x000086fe0000403e;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000403e00004040;
+  *((unsigned long *)&__m256i_op1[3]) = 0x000086fe0000403e;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000403e00004040;
+  *((unsigned long *)&__m256i_op1[1]) = 0x000086fe0000403e;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000403e00004040;
+  *((unsigned long *)&__m256i_result[3]) = 0x00001bfa000000f9;
+  *((unsigned long *)&__m256i_result[2]) = 0x000000f900004040;
+  *((unsigned long *)&__m256i_result[1]) = 0x00001bfa000000f9;
+  *((unsigned long *)&__m256i_result[0]) = 0x000000f900004040;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000010001;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffff0607ffff0607;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffff0607ffff0607;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffff0607ffff0607;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffff0607ffff0607;
+  *((unsigned long *)&__m256i_op1[3]) = 0x00000000f9f9f9f9;
+  *((unsigned long *)&__m256i_op1[2]) = 0x00000000faf3f3f2;
+  *((unsigned long *)&__m256i_op1[1]) = 0x00000000f9f9f9f9;
+  *((unsigned long *)&__m256i_op1[0]) = 0x00000000faf3f3f2;
+  *((unsigned long *)&__m256i_result[3]) = 0xffff0607ffff0383;
+  *((unsigned long *)&__m256i_result[2]) = 0xffff0607ffffc0c1;
+  *((unsigned long *)&__m256i_result[1]) = 0xffff0607ffff0383;
+  *((unsigned long *)&__m256i_result[0]) = 0xffff0607ffffc0c1;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000040;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000040;
+  *((unsigned long *)&__m256i_op1[3]) = 0x7ff8000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x7ff8000000000000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x7ff8000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x7ff8000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000040;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000040;
+  __m256i_out = __lasx_xvrotr_d (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x000000000000ff00;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x000000000000ff00;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x000000007f433c79;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x000000007f433c79;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x00000000007f8000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00000000007f8000;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000000000b7;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffefff80;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000000000b7;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffefff80;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000001fff000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000001fff000;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000000000b7;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffdfff80;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000000000b7;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffdfff80;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000010000000001;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_w (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0x0001000100010001;
+  *((unsigned long *)&__m256i_op1[2]) = 0x0001000100800000;
+  *((unsigned long *)&__m256i_op1[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000ffff0000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000ffff0000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x00000000ffff0000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x00000000ffff0000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_h (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op1[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op1[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotr_b (__m256i_op0, __m256i_op1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotri.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotri.c
new file mode 100644
index 00000000000..c1b8e1752ae
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvrotri.c
@@ -0,0 +1,394 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x6);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0xc);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0xd);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xbea2e127c046721f;
+  *((unsigned long *)&__m256i_op0[2]) = 0x1729c073816edebe;
+  *((unsigned long *)&__m256i_op0[1]) = 0xde91f010000006f9;
+  *((unsigned long *)&__m256i_op0[0]) = 0x5ef1f90efefaf30d;
+  *((unsigned long *)&__m256i_result[3]) = 0x515f93f023600fb9;
+  *((unsigned long *)&__m256i_result[2]) = 0x948b39e0b7405f6f;
+  *((unsigned long *)&__m256i_result[1]) = 0x48ef087800007c83;
+  *((unsigned long *)&__m256i_result[0]) = 0x78af877c7d7f86f9;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x9);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0202020202020202;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0202020202020202;
+  *((unsigned long *)&__m256i_op0[1]) = 0x1010101010101010;
+  *((unsigned long *)&__m256i_op0[0]) = 0x1010101010101010;
+  *((unsigned long *)&__m256i_result[3]) = 0x2020202020202020;
+  *((unsigned long *)&__m256i_result[2]) = 0x2020202020202020;
+  *((unsigned long *)&__m256i_result[1]) = 0x0101010101010101;
+  *((unsigned long *)&__m256i_result[0]) = 0x0101010101010101;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0xc);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x7f7f7f7f7f7f7f7f;
+  *((unsigned long *)&__m256i_op0[2]) = 0x7f7f7f7f7fff00ff;
+  *((unsigned long *)&__m256i_op0[1]) = 0x7f007f7f7f7f7f7f;
+  *((unsigned long *)&__m256i_op0[0]) = 0x7f7f7f7f7fff00ff;
+  *((unsigned long *)&__m256i_result[3]) = 0xbfbfbfbfbfbfbfbf;
+  *((unsigned long *)&__m256i_result[2]) = 0xbfbfbfbfbfff807f;
+  *((unsigned long *)&__m256i_result[1]) = 0xbf803fbfbfbfbfbf;
+  *((unsigned long *)&__m256i_result[0]) = 0xbfbfbfbfbfff807f;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x1);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_op0[1]) = 0xfffffffffffffffe;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000001;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffef;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000010;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffef;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000010;
+  __m256i_out = __lasx_xvrotri_b (__m256i_op0, 0x4);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x00000000002a5429;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x00000000002a5429;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000002a54290;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000002a54290;
+  __m256i_out = __lasx_xvrotri_w (__m256i_op0, 0x1c);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_b (__m256i_op0, 0x3);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000907;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000907;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000483800;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000483800;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_w (__m256i_op0, 0x15);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000007f0000007f;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000007f0000007f;
+  *((unsigned long *)&__m256i_op0[1]) = 0xff01ff80ff01ff80;
+  *((unsigned long *)&__m256i_op0[0]) = 0xff01ff800000007e;
+  *((unsigned long *)&__m256i_result[3]) = 0x003f8000003f8000;
+  *((unsigned long *)&__m256i_result[2]) = 0x003f8000003f8000;
+  *((unsigned long *)&__m256i_result[1]) = 0xffc07f80ffc07f80;
+  *((unsigned long *)&__m256i_result[0]) = 0xffc07f80003f0000;
+  __m256i_out = __lasx_xvrotri_w (__m256i_op0, 0x11);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x24);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x16);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x00000000ffff6f20;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x00000000ffff6f20;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0xdbc8000000003fff;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0xdbc8000000003fff;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x12);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0d0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0d0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0d0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0d0d0d0d0d0d0d0d;
+  *((unsigned long *)&__m256i_result[3]) = 0x4343434343434343;
+  *((unsigned long *)&__m256i_result[2]) = 0x4343434343434343;
+  *((unsigned long *)&__m256i_result[1]) = 0x4343434343434343;
+  *((unsigned long *)&__m256i_result[0]) = 0x4343434343434343;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x38);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffee;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffee;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffee;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffee;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffdffd;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffdffd;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffdffd;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffdffd;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x3);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x15);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvrotri_w (__m256i_op0, 0xf);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x35);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_w (__m256i_op0, 0x15);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000f0000000f;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000f0000000f000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000f0000000f000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000f0000000f000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000f0000000f000;
+  __m256i_out = __lasx_xvrotri_w (__m256i_op0, 0x14);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[3]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[2]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[1]) = 0xffffffffffffffff;
+  *((unsigned long *)&__m256i_result[0]) = 0xffffffffffffffff;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x5);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x80000000ff800000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x80000000ff800000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x8000000080000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x000007fc00000400;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000040000000400;
+  *((unsigned long *)&__m256i_result[1]) = 0x000007fc00000400;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000040000000400;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x35);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000008;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000008000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000008000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000008000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000008000;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x4);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_b (__m256i_op0, 0x5);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x4000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x8000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x8000000000000000;
+  __m256i_out = __lasx_xvrotri_b (__m256i_op0, 0x7);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x5);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_b (__m256i_op0, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_w (__m256i_op0, 0x1a);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x007f0000007f0060;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x007f0000007f0060;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x00f7000000f70006;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x00f7000000f70006;
+  __m256i_out = __lasx_xvrotri_b (__m256i_op0, 0x4);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_d (__m256i_op0, 0x15);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[3]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[2]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[1]) = 0x0000000000000000;
+  *((unsigned long *)&__m256i_result[0]) = 0x0000000000000000;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x6);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0xfffffefffffffeff;
+  *((unsigned long *)&__m256i_op0[2]) = 0xfffffefffffffeff;
+  *((unsigned long *)&__m256i_op0[1]) = 0xfffffefffffffeff;
+  *((unsigned long *)&__m256i_op0[0]) = 0xfffffefffffffeff;
+  *((unsigned long *)&__m256i_result[3]) = 0xfffffffbfffffffb;
+  *((unsigned long *)&__m256i_result[2]) = 0xfffffffbfffffffb;
+  *((unsigned long *)&__m256i_result[1]) = 0xfffffffbfffffffb;
+  *((unsigned long *)&__m256i_result[0]) = 0xfffffffbfffffffb;
+  __m256i_out = __lasx_xvrotri_h (__m256i_op0, 0x6);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
diff --git a/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvst.c b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvst.c
new file mode 100644
index 00000000000..3c5e775ff36
--- /dev/null
+++ b/gcc/testsuite/gcc.target/loongarch/vector/lasx/lasx-xvst.c
@@ -0,0 +1,102 @@
+/* { dg-do run } */
+/* { dg-options "-mlasx -w -fno-strict-aliasing" } */
+#include "../simd_correctness_check.h"
+#include <lasxintrin.h>
+
+int
+main ()
+{
+  __m256i __m256i_op0, __m256i_op1, __m256i_op2, __m256i_out, __m256i_result;
+  __m256 __m256_op0, __m256_op1, __m256_op2, __m256_out, __m256_result;
+  __m256d __m256d_op0, __m256d_op1, __m256d_op2, __m256d_out, __m256d_result;
+
+  int int_op0, int_op1, int_op2, int_out, int_result, i = 1, fail;
+  long int long_op0, long_op1, long_op2, lont_out, lont_result;
+  long int long_int_out, long_int_result;
+  unsigned int unsigned_int_out, unsigned_int_result;
+  unsigned long int unsigned_long_int_out, unsigned_long_int_result;
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0;
+  *((unsigned long *)&__m256i_result[2]) = 0x0;
+  *((unsigned long *)&__m256i_result[1]) = 0x0;
+  *((unsigned long *)&__m256i_result[0]) = 0x0;
+  __lasx_xvst (__m256i_op0, (unsigned long *)&__m256i_result, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_op0, __m256i_result);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0;
+  *((unsigned long *)&__m256i_result[2]) = 0x0;
+  *((unsigned long *)&__m256i_result[1]) = 0x0;
+  *((unsigned long *)&__m256i_result[0]) = 0x0;
+  __lasx_xvstx (__m256i_op0, (unsigned long *)&__m256i_result, 0x0);
+  ASSERTEQ_64 (__LINE__, __m256i_op0, __m256i_result);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0;
+  *((unsigned long *)&__m256i_result[2]) = 0x0;
+  *((unsigned long *)&__m256i_result[1]) = 0x0;
+  *((unsigned long *)&__m256i_result[0]) = 0x8d;
+  *((unsigned long *)&__m256i_out[3]) = 0x0;
+  *((unsigned long *)&__m256i_out[2]) = 0x0;
+  *((unsigned long *)&__m256i_out[1]) = 0x0;
+  *((unsigned long *)&__m256i_out[0]) = 0x0;
+  __lasx_xvstelm_b (__m256i_op0, (unsigned long *)&__m256i_out, 0x0, 0xe);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0;
+  *((unsigned long *)&__m256i_result[2]) = 0x0;
+  *((unsigned long *)&__m256i_result[1]) = 0x0;
+  *((unsigned long *)&__m256i_result[0]) = 0x9100;
+  *((unsigned long *)&__m256i_out[3]) = 0x0;
+  *((unsigned long *)&__m256i_out[2]) = 0x0;
+  *((unsigned long *)&__m256i_out[1]) = 0x0;
+  *((unsigned long *)&__m256i_out[0]) = 0x0;
+  __lasx_xvstelm_h (__m256i_op0, (unsigned long *)&__m256i_out, 0x0, 0x8);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0;
+  *((unsigned long *)&__m256i_result[2]) = 0x0;
+  *((unsigned long *)&__m256i_result[1]) = 0x0;
+  *((unsigned long *)&__m256i_result[0]) = 0xe9179100;
+  *((unsigned long *)&__m256i_out[3]) = 0x0;
+  *((unsigned long *)&__m256i_out[2]) = 0x0;
+  *((unsigned long *)&__m256i_out[1]) = 0x0;
+  *((unsigned long *)&__m256i_out[0]) = 0x0;
+  __lasx_xvstelm_w (__m256i_op0, (unsigned long *)&__m256i_out, 0x0, 0x4);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  *((unsigned long *)&__m256i_op0[3]) = 0x042f0500cfea969a;
+  *((unsigned long *)&__m256i_op0[2]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_op0[1]) = 0xa98d4f7a77c308ee;
+  *((unsigned long *)&__m256i_op0[0]) = 0x0ad152a5ad72feeb;
+  *((unsigned long *)&__m256i_result[3]) = 0x0;
+  *((unsigned long *)&__m256i_result[2]) = 0x0;
+  *((unsigned long *)&__m256i_result[1]) = 0x0;
+  *((unsigned long *)&__m256i_result[0]) = 0x58569d7be9179100;
+  *((unsigned long *)&__m256i_out[3]) = 0x0;
+  *((unsigned long *)&__m256i_out[2]) = 0x0;
+  *((unsigned long *)&__m256i_out[1]) = 0x0;
+  *((unsigned long *)&__m256i_out[0]) = 0x0;
+  __lasx_xvstelm_d (__m256i_op0, (unsigned long *)&__m256i_out, 0x0, 0x2);
+  ASSERTEQ_64 (__LINE__, __m256i_result, __m256i_out);
+
+  return 0;
+}
-- 
2.43.0

